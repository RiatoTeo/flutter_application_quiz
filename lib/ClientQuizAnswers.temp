import 'dart:async';
import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'API.dart';
import 'ClientQuizStatistics.dart';

class ClientQuizAnswers extends StatefulWidget {
  final idQuiz;
  final name;

  const ClientQuizAnswers({Key? key, this.idQuiz, this.name}) //key:key is used
      : super(key: key);

  @override
  State<ClientQuizAnswers> createState() => _ClientQuizAnswers();
}

class _ClientQuizAnswers extends State<ClientQuizAnswers> {
  buttonPressed() {}

  answerButtonPressed(idDomanda, name, correct, isAnswered) {
    isAnswered = true;
  }

  answerButton(idDomanda, textDomanda, namePlayer, nRisposta, isAnswered) {
    return Container(
        margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
        child: TextButton(
          onPressed: () =>
              answerButtonPressed(idDomanda, namePlayer, nRisposta, isAnswered),
          style: TextButton.styleFrom(
              backgroundColor: isAnswered ? Colors.green : Colors.amber),
          child: Text(textDomanda),
        ));
  }

  @override
  Widget build(BuildContext context) {
    const appTitle = 'Rispondi alle seguenti domande';

    return Scaffold(
      appBar: AppBar(
        title: const Text(appTitle),
      ),
      body: Center(
        child: SingleChildScrollView(
          child: Column(
            children: [
              FutureBuilder<Map>(
                future: API().getQuizById(widget
                    .idQuiz), // a previously-obtained Future<String> or null
                builder: (BuildContext context, AsyncSnapshot<Map> quiz) {
                  List<Widget> children;
                  if (quiz.hasData) {
                    children = <Widget>[];
                    for (var domanda in quiz.data?["Questions"]) {
                      domanda["isAnswered"] = false;
                      children.add(Column(
                        children: [
                          Column(
                            children: [
                              Text(domanda["description"]),
                            ],
                          ),
                          Center(
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                answerButton(domanda["id"], domanda["answer1"],
                                    widget.name, 1, domanda["isAnswered"]),
                                answerButton(domanda["id"], domanda["answer2"],
                                    widget.name, 2, domanda["isAnswered"]),
                              ],
                            ),
                          ),
                          Center(
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                answerButton(domanda["id"], domanda["answer3"],
                                    widget.name, 3, domanda["isAnswered"]),
                                answerButton(domanda["id"], domanda["answer4"],
                                    widget.name, 4, domanda["isAnswered"]),
                              ],
                            ),
                          ),
                        ],
                      ));
                    }
                  } else {
                    children = const <Widget>[
                      SizedBox(
                        width: 60,
                        height: 60,
                        child: CircularProgressIndicator(),
                      ),
                      Padding(
                        padding: EdgeInsets.only(top: 16),
                        child: Text('Awaiting result...'),
                      ),
                    ];
                  }

                  return Center(
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: children,
                    ),
                  );
                },
              ),
              TextButton(
                onPressed: () async {
                  var message = await Navigator.push(context,
                      MaterialPageRoute(builder: (context) {
                    return const Statistics();
                  }));
                  print(message);
                },
                child: const Text('Termina Quiz e vai ai risultati'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
